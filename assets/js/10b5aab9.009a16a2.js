"use strict";(self.webpackChunkbloksec_docs=self.webpackChunkbloksec_docs||[]).push([[7802],{4823:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=s(5893),t=s(1151);const r={id:"integration-salesforce",sidebar_position:4,title:"Salesforce",createdAt:new Date("2022-03-22T10:15:32.000Z"),updatedAt:new Date("2023-03-03T08:25:42.000Z"),tags:["Integration","Salesforce","OIDC"]},a=void 0,o={id:"integrations/integration-salesforce",title:"Salesforce",description:"BlokSec can be configured as an inbound federation identity provider (a.k.a. social provider) for your Salesforce tenant, and can also be integrated to support just in time provisioning (JIT) for user creation in Salesforce. The following article describes the process to configure authentication and provisioning to support passwordless Salesforce login.",source:"@site/docs/integrations/salesforce.md",sourceDirName:"integrations",slug:"/integrations/integration-salesforce",permalink:"/docs/integrations/integration-salesforce",draft:!1,unlisted:!1,tags:[{label:"Integration",permalink:"/docs/tags/integration"},{label:"Salesforce",permalink:"/docs/tags/salesforce"},{label:"OIDC",permalink:"/docs/tags/oidc"}],version:"current",sidebarPosition:4,frontMatter:{id:"integration-salesforce",sidebar_position:4,title:"Salesforce",createdAt:"2022-03-22T10:15:32.000Z",updatedAt:"2023-03-03T08:25:42.000Z",tags:["Integration","Salesforce","OIDC"]},sidebar:"integrationsSidebar",previous:{title:"Dropbox",permalink:"/docs/integrations/integration-dropbox"},next:{title:"CyberaArk",permalink:"/docs/integrations/integration-cyberark"}},l={},d=[{value:"BlokSec Admin UI",id:"bloksec-admin-ui",level:2},{value:"Salesforce Admin UI",id:"salesforce-admin-ui",level:2},{value:"Registration Handler Configuration",id:"registration-handler-configuration",level:3},{value:"OIDC Configuration",id:"oidc-configuration",level:3},{value:"Authentication Configuration",id:"authentication-configuration",level:3},{value:"BlokSec Admin UI (Part 2)",id:"bloksec-admin-ui-part-2",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"BlokSec can be configured as an inbound federation identity provider (a.k.a. social provider) for your Salesforce tenant, and can also be integrated to support just in time provisioning (JIT) for user creation in Salesforce. The following article describes the process to configure authentication and provisioning to support passwordless Salesforce login."}),"\n",(0,i.jsx)(n.h2,{id:"bloksec-admin-ui",children:"BlokSec Admin UI"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Sign into BlokSec admin UI as a user with admin privileges for your tenant"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["On the main dashboard, click the ",(0,i.jsx)(n.strong,{children:"Add Application"})," drop-down and select ",(0,i.jsx)(n.strong,{children:"Create From Template"})," and then select ",(0,i.jsx)(n.strong,{children:"Salesforce"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Complete the application details as follows :"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Name:"})," Default is set to Salesforce (or your desired application name \u2013 we will assume this is called \u2018Salesforce\u2019 for the remainder of this article)"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Logo URI:"})," Loation of the image URL (For example : ",(0,i.jsx)(n.a,{href:"https://bloksec.io/images/appLogo.png",children:"https://bloksec.io/images/appLogo.png"}),")"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Backgroun URI:"})," Location of the brackground image URL (For example : ",(0,i.jsx)(n.a,{href:"https://bloksec.io/images/appLogoBackground.png",children:"https://bloksec.io/images/appLogoBackground.png"}),")"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Session Length:"})," Length of the authenticated session. Default value is set to 60 minutes"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Redirect URIs:"})," (leave blank for now)"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Post Logout Redirect URIs:"})," (leave blank for now)"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Select Submit to save the configuration"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Click ",(0,i.jsx)(n.strong,{children:"Generate App Secret"}),", and  make note of the ",(0,i.jsx)(n.strong,{children:"Application ID"})," and ",(0,i.jsx)(n.strong,{children:"Application Secret"})," as these will be required when registering your application with Salesforce"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"salesforce-admin-ui",children:"Salesforce Admin UI"}),"\n",(0,i.jsx)(n.h3,{id:"registration-handler-configuration",children:"Registration Handler Configuration"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Sign into the Salesforce as a user with admin privileges for your tenant"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Navigate to ",(0,i.jsx)(n.strong,{children:"Platform Tools > Custom Code"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select ",(0,i.jsx)(n.strong,{children:"Apex Classes"})," and then choose ",(0,i.jsx)(n.strong,{children:"New"})," and add the following to the ",(0,i.jsx)(n.strong,{children:"Apex Class"})," tab:"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"//TODO: You will need to customize this class to ensure it meets your needs and\n//the data provided by the third party.\n\nglobal class BlokSecRegHandler implements Auth.RegistrationHandler{\nglobal boolean canCreateUser(Auth.UserData data) {\n    System.debug('canCreateUser was called for ' + (data != null ? data.username : 'null'));\n    Boolean retVal = (data != null \n            && data.email != null\n            && data.lastName != null\n            && data.firstName != null\n            && data.username != null);\n    \n    System.debug('data.username='+data.username);\n    System.debug('data.email='+data.email);\n    System.debug('data.lastName='+data.lastName);\n    System.debug('data.firstName='+data.firstName);\n    System.debug('canCreateUser='+retVal);\n    \n    return retVal;\n}\n\nglobal User createUser(Id portalId, Auth.UserData data){\n    System.debug('createUser was called for portalId: ' + portalId + ' and userName: ' + data.username);\n    \n    User u;\n\n        List<User> l = [SELECT Id,UserName,FirstName,LastName,Email FROM User WHERE UserName = :data.username];\n        if (l.size() > 0) \n        {\n            u = l[0];\n            System.debug('Found existing user record for '+ data.firstName + ' ' + data.lastName + ' ' + data.email);\n            System.debug(u.FirstName + ' ' + u.LastName + ' ' + u.Email + ' ' + u.UserName);\n\n            // Update existing record\n            u.Email = data.email;\n            u.LastName = data.lastName;\n            u.FirstName = data.firstName;\n\n            System.debug('Updating user record for '+ data.firstName + ' ' + data.lastName + ' ' + data.email);\n            System.debug(u.FirstName + ' ' + u.LastName + ' ' + u.Email);\n\n            update(u);\n            return u;\n        } \n    \n    // If the user was not found, we will create a new one\n    // First check that the required data was provided\n    if(!canCreateUser(data)) {\n        System.debug('canCreateUser returned false; aborting SSO flow');\n        //Returning null or throwing an exception fails the SSO flow\n        return null;\n    }\n    //The user is authorized, so create their Salesforce user\n    u = new User();\n    Profile p = [SELECT Id FROM profile WHERE name='Chatter Free User'];\n    //TODO: Customize the username. Also check that the username doesn't already exist and\n    //possibly ensure there are enough org licenses to create a user. Must be 80 characters\n    //or less.\n    u.username = data.username;\n    u.email = data.username;\n    u.lastName = data.lastName;\n    u.firstName = data.firstName;\n    String alias = data.username;\n    //Alias must be 8 characters or less\n    if(alias.length() > 8) {\n        alias = alias.substring(0, 8);\n    }\n    u.alias = alias;\n    u.email = data.username;\n    u.localesidkey = UserInfo.getLocale();\n    u.languagelocalekey = 'en_US';\n    //u.localesidkey = UserInfo.getLocale();\n    u.emailEncodingKey = 'UTF-8';\n    u.timeZoneSidKey = 'America/Los_Angeles';\n    u.profileId = p.Id;\n    return u;\n}\n\nglobal void updateUser(Id userId, Id portalId, Auth.UserData data){\n    System.debug('The userid is: ' + userId);\n    System.debug('The Auth.UserData is: ' + data);\n    User u = new User(id=userId);\n    u.email = data.email;\n    u.lastName = data.lastName;\n    u.firstName = data.firstName;\n    u.username = data.username;\n    update(u);\n}\n}\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"Save"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"oidc-configuration",children:"OIDC Configuration"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Sign into the Salesforce as a user with admin privileges for your tenant"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Navigate to ",(0,i.jsx)(n.strong,{children:"Settings"})," > ",(0,i.jsx)(n.strong,{children:"Identity"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select ",(0,i.jsx)(n.strong,{children:"Auth. Providers"})," and then choose New"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select ",(0,i.jsx)(n.strong,{children:"Open ID Connect"})," from the dropdown menu and complete the authentication provider configuration with the following values (adjusting if required to meet your desired behaviour):"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Name:"})," Salesforce Passwordless Login (or the name of your choice)"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"URL Suffix:"})," Keep the auto generated value or update it to meet your requirements"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Consumer Key:"})," (the Application ID captured from the BlokSec admin UI above)"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Consumer Secret:"})," (the Application Secret captured from the BlokSec admin UI above)"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Authorize Endpoint URL:"})," ",(0,i.jsx)(n.a,{href:"https://api.bloksec.io/oidc/auth",children:"https://api.bloksec.io/oidc/auth"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Token Endpoint URL:"})," ",(0,i.jsx)(n.a,{href:"https://api.bloksec.io/oidc/token",children:"https://api.bloksec.io/oidc/token"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"User Info Endpoint URL:"})," ",(0,i.jsx)(n.a,{href:"https://api.bloksec.io/oidc/me",children:"https://api.bloksec.io/oidc/me"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Default Scopes:"})," openid email profile"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Send access token in header:"})," selected / checked"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Include Consumer Secrets in API Responses:"})," selected / checked"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Custom Logout URL:"})," ",(0,i.jsx)(n.a,{href:"https://api.bloksec.io/oidc/session/end",children:"https://api.bloksec.io/oidc/session/end"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Registration Handler:"})," BlokSecRegHandler (use registration handler lookup)"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Execute Registration As:"})," (choose a user / account that has the ability to create / update / delete users)"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select ",(0,i.jsx)(n.strong,{children:"Save"})," to accept configuration changes"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Once saved, navigate to the Salesforce configuration section and copy the values for the following URL\u2019s:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Callback URL"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"SingleLogout URL"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://s3.us-east-2.amazonaws.com/io.bloksec.static-hosting/docs/1HbKQMeDR6fQEyf6ykShI_salesforceurl-1024x193.png",alt:"Screenshot"})}),"\n",(0,i.jsx)(n.h3,{id:"authentication-configuration",children:"Authentication Configuration"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Sign into the Salesforce as a user with admin privileges for your tenant"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Navigate to ",(0,i.jsx)(n.strong,{children:"Settings > Company Settings"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select ",(0,i.jsx)(n.strong,{children:"My Domain"})," and then navigate to ",(0,i.jsx)(n.strong,{children:"Authentication Configuration"})," section"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select ",(0,i.jsx)(n.strong,{children:"Edit"})," and then select / check the name of the ",(0,i.jsx)(n.strong,{children:"Authentication Service"})," created above in OIDC configuration, for example, Salesforce Passwordless Login"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select ",(0,i.jsx)(n.strong,{children:"Save"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"bloksec-admin-ui-part-2",children:"BlokSec Admin UI (Part 2)"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Return to the Salesforce application configuration, click the gear in the upper-right, and select ",(0,i.jsx)(n.strong,{children:"Edit Application"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Input the value of the ",(0,i.jsx)(n.strong,{children:"CallBackURL"})," into BlokSec ",(0,i.jsx)(n.strong,{children:"Redirect URI"})," field as defined by Salesforce in last step of OIDC configuration"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Input the value of ",(0,i.jsx)(n.strong,{children:"SingleLogout"})," URL into BlokSec ",(0,i.jsx)(n.strong,{children:"Post Logout Redirect URIs"})," field as defined by Salesforce in last step of OIDC configuration"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select ",(0,i.jsx)(n.strong,{children:"Submit"})," to save the configuration"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>a});var i=s(7294);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);