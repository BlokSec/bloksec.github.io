"use strict";(self.webpackChunkbloksec_docs=self.webpackChunkbloksec_docs||[]).push([[5617],{2333:e=>{e.exports=JSON.parse('{"label":"Tutorial","permalink":"/docs/tags/tutorial","allTagsPath":"/docs/tags","count":4,"items":[{"id":"tutorial/use-cases/usecases-mfa-2fa","title":"BlokSec for MFA / 2FA","description":"Although we feel that BlokSec is best used as a strong primary authentication factor in place of passwords and multi-factor authentication (MFA / 2FA) (indeed, BlokSec immutable authentication is stronger than passwords + legacy MFA combined) it can still be used to act as an additional authentication factor in the following scenarios:","permalink":"/docs/tutorial/use-cases/usecases-mfa-2fa"},{"id":"tutorial/use-cases/usecases-passwordlesslogin","title":"Integration via Standard Protocols (OIDC, SAML2)","description":"The primary use-case for BlokSec is to enable secure, passwordless login to websites and applications. Because BlokSec leverages strong cryptography (elliptic-curve digital signature algorithms), the secure hardward keystore of your device, and biometry to positively identify that you are the verifed user, logging in with BlokSec provides better security than passwords and MFA combined.","permalink":"/docs/tutorial/use-cases/usecases-passwordlesslogin"},{"id":"tutorial/use-cases/usecases-custom-app","title":"Integration with In-House / Custom Applications","description":"Adding secure, passwordles login to your custom application is relatively easy with BlokSec - you will need to use two straightforward RESTful APIs - POST /registration and POST /auth&#x20;","permalink":"/docs/tutorial/use-cases/usecases-custom-app"},{"id":"tutorial/tutorial-oidc/tutorial-oidc-playground","title":"OpenID Connect Playground","description":"One of the best ways to learn the OIDC flow is to see it in action. This is also an excellent resource to troubleshoot issues with OIDC integrations - it allows you to see the tokens flowing between the browser, the relying party, and the identity provider right in your browser. This tutorial leverages the OpenID Connect Playground debugging tool provided by Auth0 / Okta (they may be competition, but they have great resources for developers!)","permalink":"/docs/tutorial/tutorial-oidc/tutorial-oidc-playground"}],"unlisted":false}')}}]);